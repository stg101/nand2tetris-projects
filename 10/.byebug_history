continue
token_stack
self.last_match
match
self.current_str
n
c
match
current_str
c
n
match
current_str
c
n
match
current_char
token_stack
c
n
match
exit
"\nasd".strip
self.current_str
n
current_char
self.current_str
n
match[:rule]
last_match[:rule]
self.current_str
c
exit
token_stack
current_str
c
current_str
c
current_str
c
current_str
c
self.current_str
c
self.current_str
c
s
last_match[:rule]
match[:rule]
self.current_str
c
token_stack
self.current_str
c
self.current_str
c
self.current_str
c
self.current_str
c
self.current_str
c
self.current_str
c
self.current_str
token_stack
c
token_stack
c
cc
c
exit
continue
self.current_str
token_stack
c
n
token_stack
c
token_stack
c
exit
token_stack
c
exit
continue
!last_match
match
current_str
token_stack
c
n
last_match[:rule]
token_stack
n
token_stack
self.current_str
n
last_match
token_stack
n
match[:rule]
last_match[:rule]
c
quit
continue
current_str
match[:rule]
last_match[:rule]
c
n
last_match[:rule]
match[:rule]
current_str
c
current_str
c
token_stack
current_str
c
n
current_str
n
last_match[:rule]
match[:rule]
current_str
token_stack
q
continue
s
c
token_stack
n
token_stack
n
token_stack
self.char_stack
match
n
self.char_stack
token_stack
n
token_stack
match
last_match
current_val
